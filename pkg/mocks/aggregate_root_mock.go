// Code generated by MockGen. DO NOT EDIT.
// Source: types.go
//
// Generated by this command:
//
//	mockgen -source=types.go -destination=../mocks/aggregate_root_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	uuid "github.com/google/uuid"
	aggregate "github.com/sosalejandro/ddd-golang/pkg/aggregate"
	gomock "go.uber.org/mock/gomock"
)

// MockAggregateRootInterface is a mock of AggregateRootInterface interface.
type MockAggregateRootInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAggregateRootInterfaceMockRecorder
	isgomock struct{}
}

// MockAggregateRootInterfaceMockRecorder is the mock recorder for MockAggregateRootInterface.
type MockAggregateRootInterfaceMockRecorder struct {
	mock *MockAggregateRootInterface
}

// NewMockAggregateRootInterface creates a new mock instance.
func NewMockAggregateRootInterface(ctrl *gomock.Controller) *MockAggregateRootInterface {
	mock := &MockAggregateRootInterface{ctrl: ctrl}
	mock.recorder = &MockAggregateRootInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAggregateRootInterface) EXPECT() *MockAggregateRootInterfaceMockRecorder {
	return m.recorder
}

// ClearChanges mocks base method.
func (m *MockAggregateRootInterface) ClearChanges() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ClearChanges")
}

// ClearChanges indicates an expected call of ClearChanges.
func (mr *MockAggregateRootInterfaceMockRecorder) ClearChanges() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClearChanges", reflect.TypeOf((*MockAggregateRootInterface)(nil).ClearChanges))
}

// Deserialize mocks base method.
func (m *MockAggregateRootInterface) Deserialize(arg0 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Deserialize", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Deserialize indicates an expected call of Deserialize.
func (mr *MockAggregateRootInterfaceMockRecorder) Deserialize(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deserialize", reflect.TypeOf((*MockAggregateRootInterface)(nil).Deserialize), arg0)
}

// GetChanges mocks base method.
func (m *MockAggregateRootInterface) GetChanges() []aggregate.RecordedEvent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChanges")
	ret0, _ := ret[0].([]aggregate.RecordedEvent)
	return ret0
}

// GetChanges indicates an expected call of GetChanges.
func (mr *MockAggregateRootInterfaceMockRecorder) GetChanges() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChanges", reflect.TypeOf((*MockAggregateRootInterface)(nil).GetChanges))
}

// Id mocks base method.
func (m *MockAggregateRootInterface) Id() uuid.UUID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Id")
	ret0, _ := ret[0].(uuid.UUID)
	return ret0
}

// Id indicates an expected call of Id.
func (mr *MockAggregateRootInterfaceMockRecorder) Id() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Id", reflect.TypeOf((*MockAggregateRootInterface)(nil).Id))
}

// Load mocks base method.
func (m *MockAggregateRootInterface) Load(ctx context.Context, events ...aggregate.RecordedEvent) error {
	m.ctrl.T.Helper()
	varargs := []any{ctx}
	for _, a := range events {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Load", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Load indicates an expected call of Load.
func (mr *MockAggregateRootInterfaceMockRecorder) Load(ctx any, events ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx}, events...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockAggregateRootInterface)(nil).Load), varargs...)
}

// Serialize mocks base method.
func (m *MockAggregateRootInterface) Serialize() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Serialize")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Serialize indicates an expected call of Serialize.
func (mr *MockAggregateRootInterfaceMockRecorder) Serialize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Serialize", reflect.TypeOf((*MockAggregateRootInterface)(nil).Serialize))
}

// SetId mocks base method.
func (m *MockAggregateRootInterface) SetId(arg0 uuid.UUID) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetId", arg0)
}

// SetId indicates an expected call of SetId.
func (mr *MockAggregateRootInterfaceMockRecorder) SetId(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetId", reflect.TypeOf((*MockAggregateRootInterface)(nil).SetId), arg0)
}
